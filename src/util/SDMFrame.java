/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package util;

import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javafx.scene.input.KeyCode;

/**
 *
 * @author lol
 */
public class SDMFrame extends javax.swing.JFrame {

    private SDMCreater sdm;

    /**
     * Creates new form SDMFrame
     */
    public SDMFrame() {
        sdm = new SDMCreater();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        classText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dataText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        basePathText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        packageText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        demoText = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        paramText = new javax.swing.JTextField();
        shuxing_01 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        infoText = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        typeButton = new javax.swing.JComboBox();
        lengthText = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        classText.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                classTextInputMethodTextChanged(evt);
            }
        });
        classText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                classTextKeyPressed(evt);
            }
        });
        getContentPane().add(classText, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 70, 100, -1));

        jLabel1.setText("类名");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 73, -1, -1));

        jLabel2.setText("数据库表名");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 73, -1, -1));

        dataText.setToolTipText("");
        dataText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dataTextKeyPressed(evt);
            }
        });
        getContentPane().add(dataText, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 70, 115, -1));

        jLabel3.setText("项目的src路径");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 13, -1, -1));

        basePathText.setToolTipText("");
        basePathText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                basePathTextKeyPressed(evt);
            }
        });
        getContentPane().add(basePathText, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 10, 249, -1));

        jLabel4.setText("包名");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 42, -1, -1));

        packageText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                packageTextKeyPressed(evt);
            }
        });
        getContentPane().add(packageText, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 39, 303, -1));

        jLabel6.setText("生成样例");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 101, 50, 20));

        demoText.setColumns(20);
        demoText.setRows(5);
        jScrollPane2.setViewportView(demoText);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 131, 331, 300));

        jLabel5.setText("属性列表");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(376, 13, -1, -1));

        paramText.setToolTipText("");
        paramText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                paramTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paramTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paramTextKeyTyped(evt);
            }
        });
        getContentPane().add(paramText, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 39, 93, -1));
        getContentPane().add(shuxing_01, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 70, 93, -1));

        jButton1.setText("确认");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 440, 90, 40));

        jLabel7.setText("提醒:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 435, 40, 50));

        infoText.setForeground(new java.awt.Color(255, 0, 51));
        infoText.setText("使用愉快");
        infoText.setToolTipText("");
        getContentPane().add(infoText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, 290, 40));

        jLabel8.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 51, 255)));
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 90, 350));

        typeButton.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Entity", "Dao", "DaoImpl", "Service", "ServiceImpl" }));
        typeButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeButtonItemStateChanged(evt);
            }
        });
        getContentPane().add(typeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        lengthText.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lengthTextStateChanged(evt);
            }
        });
        getContentPane().add(lengthText, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 70, -1));

        jLabel9.setText("并联个数:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 60, 20));

        pack();
    }// </editor-fold>                        

    private void classTextInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void classTextKeyPressed(java.awt.event.KeyEvent evt) {                                     
        // TODO add your handling code here:
        classText.setText(StringUtil.getUp(classText.getText()));
        update();
    }                                    

    private void paramTextKeyPressed(java.awt.event.KeyEvent evt) {                                     
        // TODO add your handling code here:
        paramText.setText(StringUtil.getLow(paramText.getText()));
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!"".equals(paramText.getText()) && !params.containsKey(paramText.getText())) {
                params.put(paramText.getText(), "ture");
            }
            showParam();
            paramText.setText("");
            update();
        }
    }                                    

    private void basePathTextKeyPressed(java.awt.event.KeyEvent evt) {                                        
        // TODO add your handling code here:
        update();
    }                                       

    private void packageTextKeyPressed(java.awt.event.KeyEvent evt) {                                       
        // TODO add your handling code here:
        update();
    }                                      

    private void dataTextKeyPressed(java.awt.event.KeyEvent evt) {                                    
        // TODO add your handling code here:
        update();
    }                                   

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        build();
    }                                        

    private void paramTextKeyTyped(java.awt.event.KeyEvent evt) {                                   
        // TODO add your handling code here:

    }                                  

    private void paramTextKeyReleased(java.awt.event.KeyEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void typeButtonItemStateChanged(java.awt.event.ItemEvent evt) {                                            
        // TODO add your handling code here:
        update();
    }                                           

    private void lengthTextStateChanged(javax.swing.event.ChangeEvent evt) {                                        
        // TODO add your handling code here:
        if (Integer.parseInt(lengthText.getValue().toString()) < 0) {
            lengthText.setValue(0);
        } else if (Integer.parseInt(lengthText.getValue().toString()) > params.size()) {
            lengthText.setValue(params.size());
        }
        update();
    }                                       

    private void showParam() {
        for (javax.swing.JLabel j : paramsList) {
            j.setVisible(false);
            getContentPane().remove(j);
            j.removeAll();
        }
        paramsList.clear();
        int now = 0;
        for (String str : params.keySet()) {
            javax.swing.JLabel j = new javax.swing.JLabel();
            j.addMouseListener(new MouseAdapter() {
                String s = str;

                @Override
                public void mouseClicked(MouseEvent e) {
                    params.remove(s);
                    showParam();
                    update();
                }

            });
            j.setText(str);
            getContentPane().add(j, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80 + now * 15, -1, -1));
            paramsList.add(j);
            now++;
        }
        pack();
    }

    private void build() {
        sdm.reset();
        if ("".equals(basePathText.getText())) {
            infoText.setText("请输入项目的src路径");
            return;
        }
        if ("".equals(packageText.getText())) {
            infoText.setText("请输入包名");
            return;
        }
        if ("".equals(dataText.getText())) {
            infoText.setText("请输入数据库名");
            return;
        }
        if ("".equals(classText.getText())) {
            infoText.setText("请输入类名");
            return;
        }
        if (params.keySet().isEmpty()) {
            infoText.setText("请输入属性");
            return;
        }
        sdm.setBasePath(basePathText.getText());
        sdm.setPackageName(packageText.getText());
        sdm.setDataName(dataText.getText());
        sdm.setClassName(classText.getText());
        sdm.addParamNames(params.keySet());
        sdm.setLength(Integer.parseInt(lengthText.getValue().toString()));
        sdm.build();
        infoText.setText("创建成功");
    }

    private void update() {
        sdm.reset();
        if ("".equals(packageText.getText())) {
            infoText.setText("请输入包名");
        } else if ("".equals(dataText.getText())) {
            infoText.setText("请输入数据库名");
        } else if ("".equals(classText.getText())) {
            infoText.setText("请输入类名");
        } else if (params.keySet().isEmpty()) {
            infoText.setText("请输入属性");
        } else if ("".equals(basePathText.getText())) {
            infoText.setText("请输入项目的src路径");
        }
        sdm.setBasePath(basePathText.getText());
        sdm.setPackageName(packageText.getText());
        sdm.setDataName(dataText.getText());
        sdm.setClassName(classText.getText());
        sdm.addParamNames(params.keySet());
        sdm.setLength(Integer.parseInt(lengthText.getValue().toString()));
        if ("Entity".equals(typeButton.getSelectedItem())) {
            demoText.setText(sdm.createEntityToString());
        } else if ("Dao".equals(typeButton.getSelectedItem())) {
            demoText.setText(sdm.createDaoToString());
        } else if ("DaoImpl".equals(typeButton.getSelectedItem())) {
            demoText.setText(sdm.createDaoImplToString());
        } else if ("Service".equals(typeButton.getSelectedItem())) {
            demoText.setText(sdm.createServiceToString());
        } else if ("ServiceImpl".equals(typeButton.getSelectedItem())) {
            demoText.setText(sdm.createServiceToString());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SDMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SDMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SDMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SDMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SDMFrame().setVisible(true);
            }
        });
    }

    private List<javax.swing.JLabel> paramsList = new ArrayList();
    private Map<String, String> params = new HashMap();
    // Variables declaration - do not modify                     
    private javax.swing.JTextField basePathText;
    private javax.swing.JTextField classText;
    private javax.swing.JTextField dataText;
    private javax.swing.JTextArea demoText;
    private javax.swing.JLabel infoText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner lengthText;
    private javax.swing.JTextField packageText;
    private javax.swing.JTextField paramText;
    private javax.swing.JLabel shuxing_01;
    private javax.swing.JComboBox typeButton;
    // End of variables declaration                   
}
